#ifndef __GUI_H
#define __GUI_H
#include <stdio.h>
#include <gtk/gtk.h>
#include <logo.h>
#define C0 'X'
#define C1 '.'
#define C2 'C'
#define C3 'Z'

char *filename;
int picnum;
int save_dialog;
int only_get_1;
int album_dialog;
int generate_album;
int CONVERT2JPEG;

unsigned char *images[31][117];
char *comment_file;
char *comments[31];
GtkWidget *entrys[31];

double color0[4];
double color1[4];
double color2[4];
double color3[4];
int colors[4];

int is_error;
int verify (FILE *fd);

GtkWidget *create_palette_win();
GtkWidget *create_save_win();
GtkWidget *create_error_win(char *label);

GtkWidget *preview;
GdkPixmap *preview_pixmap;

GtkWidget *error_win;
GtkWidget *label_preview;
GtkWidget *save_win;
GtkWidget *file_selector;

GtkWidget *win_palette;
GtkWidget *palette_button_c0;
GtkWidget *palette_button_c1;
GtkWidget *palette_button_c2;
GtkWidget *palette_button_c3;

int open_and_process();
int verify(FILE *fd);
GtkWidget *create_save_win();
GtkWidget *create_error_win(char *label);
GtkWidget *create_album_win();
GtkWidget *create_palette_win();
GtkWidget *create_help_win();
void create_about_win();
GtkWidget *create_general_win();

void update_pix();

void exit_prog(GtkWidget *widget, gpointer *data);
void show_error (char *label);
void hide_error (GtkWidget *widget, GtkWidget *data);

int verify(FILE *fd);
int open_and_process();
void select_save(GtkWidget *widget, gpointer *data);
void file_picked(GtkWidget *widget, gpointer *data);
void pick_file(GtkWidget *widget, GtkWidget *filew);
void save_files(GtkWidget *widget, gpointer *data);
void destroy_save(GtkWidget *widget, gpointer *data);
void select_all(GtkWidget *widget, gpointer *data);

void preview_previous (GtkWidget *widget, GtkWidget *drawing);
void preview_next (GtkWidget *widget, GtkWidget *drawing);
void preview_clear(GtkWidget *widget, GdkEventConfigure *event );
void preview_expose(GtkWidget *widget, GdkEventExpose *event);

void choose_palette(GtkWidget *widget, gpointer *data);
void apply_palette(GtkWidget *widget, gpointer *data);
void color_pick3(GtkWidget *widget, GtkWidget *data);
void color_pick2(GtkWidget *widget, GtkWidget *data);
void color_pick1(GtkWidget *widget, GtkWidget *data);
void color_pick0(GtkWidget *widget, GtkWidget *data);
void apply_negated_palette(GtkWidget *widget, gpointer *data);

void destroy_album(GtkWidget *widget, GtkWidget *data);
int open_album_file(GtkWidget *widget, GtkWidget *data);
int save_album_file(GtkWidget *widget, GtkWidget *data);
void open_album_file_dialog (GtkWidget *widget, gpointer *data);
void save_album_file_dialog (GtkWidget *widget, gpointer *data);
void gen_album(char base[256], int type, int c);
void toggle_album(GtkWidget *widget, gpointer *data);

int selector_on;
void selector_show(GtkWidget *none, GtkSignalFunc target_sig);
void selector_destroy(GtkWidget *widget, GtkWidget *data);

static char *html_head = " \n\
<HTML> \n\
<HEAD> \n\
<TITLE> My GBCamera Album - %s </TITLE></HEAD> \n\
<BODY> \n\
<p align=center><font size=5>%s</font><br> \n\
<font size=2>* Shot with a GB Camera *</font></p> \n\
<TABLE border=1 width=100%%> \n\
<tr>"; 

static char *html_foot = " \n\
<p>&nbsp</p> \n\
<p>&nbsp</p> \n\
<p>&nbsp</p> \n\
<p>&nbsp</p> \n\
<p align=center><font size=2> Album generated by gbcamc for linux \n\
to obtain it please visit <a href=www.vkcorp.org>vkcorp.org</a></font></p>"; 
/* please don't remove the credits */ 


#endif
